package controller;

import com.jfinal.core.Controller;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import model.ssk.XcIndex;
import util.MsgUtil;
import util.node.InfiniteLevelTreeUtil;
import util.node.Node;

import java.util.ArrayList;
import java.util.List;

public class MsgTreeController extends Controller {
    //信息树
    public void msgTree(){
            int type=getParaToInt("type");

            List<XcIndex> xc=XcIndex.getXcByType(type);
            List<Node> nodeList=new ArrayList<>();
            for(XcIndex arr:xc){
               // Node node=Node.getNode(arr);
                nodeList.add(Node.getNode(arr));
            }
            List<Node> list=InfiniteLevelTreeUtil.getInfiniteLevelTree(nodeList);
            renderJson(MsgUtil.successMsg(list));

    }
    //信息云
    public void cloud(){
            renderJson(MsgUtil.successMsg(XcIndex.getCloud(getParaToInt("type"))));

    }
    //计算字段数
    public void calculation() {
        for (int i = 1; i < 3; i++) {
            List<XcIndex> arr=XcIndex.getXC(i);
            for (XcIndex xc:arr) {
                List<XcIndex> brr=XcIndex.getCxcBypid(xc.getCid());
                for (XcIndex xc1:brr) {
                    Db.update("update xc_index set num=(select count(*) from hz_xc_sssj."+xc.getEname()+" where "+xc1.getEname()+" is not null) where ename=?",xc1.getEname());
                }
            }

        }
        renderJson(MsgUtil.successMsg("计算字段数值成功"));
    }
}
